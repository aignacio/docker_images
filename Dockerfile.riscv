# ---- Build stage ----
# This stage builds all components (toolchain, spike, pk, verilator)

FROM ubuntu:latest AS builder

# Set arguments with default versions
ARG RISCV_TOOLCHAIN_VERSION=latest
ARG VERILATOR_VERSION=stable
ARG SPIKE_VERSION=master

# Install dependencies
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    autoconf automake autotools-dev curl jq wget python3 python3-pip libmpc-dev libmpfr-dev libgmp-dev \
    gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev git \
    libexpat-dev libboost-all-dev libyaml-dev device-tree-compiler cmake ninja-build \
    libgoogle-perftools-dev libglib2.0-dev libpixman-1-dev pkg-config python3-setuptools \
    python3-pybind11 && \
    rm -rf /var/lib/apt/lists/*

# Installing RISC-V toolchain
ENV RISCV=/opt/riscv
ENV NVM_DIR=/root/.nvm
ENV XPACKS_STORE_FOLDER=/root/.local/xPacks

RUN bash -lc 'set -euo pipefail; \
  curl -fsSL https://raw.githubusercontent.com/xpack/assets/master/scripts/install-nvm-node-npm-xpm.sh | bash && \
  source "$NVM_DIR/nvm.sh" && \
  node -v && npm -v && xpm --version && \
  xpm install --global @xpack-dev-tools/riscv-none-elf-gcc@$RISCV_TOOLCHAIN_VERSION --verbose && \
  SRC="$(ls -d "$XPACKS_STORE_FOLDER"/@xpack-dev-tools/riscv-none-elf-gcc/*/.content | sort -V | tail -1)" && \
  mkdir -p "$RISCV" && cp -a "$SRC"/. "$RISCV"/'

# Build spike
RUN git clone https://github.com/riscv-software-src/riscv-isa-sim.git && \
    cd riscv-isa-sim && \
    git checkout ${SPIKE_VERSION} && \
    mkdir build && cd build && \
    ../configure --prefix=$RISCV && make -j$(nproc) && make install

# # Build proxy kernel (pk)
# RUN git clone https://github.com/riscv-software-src/riscv-pk.git && \
#     cd riscv-pk && \
#     mkdir build && cd build && \
#     ../configure --prefix=$RISCV --host=riscv64-unknown-elf && \
#     make -j$(nproc) && make install

# Build Verilator
RUN apt-get update -y && apt-get install git help2man perl python3 make \
    g++ libfl-dev zlib1g zlib1g-dev ccache mold libgoogle-perftools-dev numactl -y
RUN git clone https://github.com/verilator/verilator && \
    cd verilator && \
    git checkout ${VERILATOR_VERSION} && \
    autoconf && ./configure && make -j$(nproc) && make install

# ---- Final image ----
FROM ubuntu:latest AS final

ARG VERILATOR_VERSION=stable

# Copy from build stage
COPY --from=builder /opt/riscv /opt/riscv
COPY --from=builder /usr/local/bin/verilator* /usr/local/bin/
COPY --from=builder /usr/local/share/verilator /usr/local/share/verilator
COPY --from=builder /usr/local/lib /usr/local/lib
COPY --from=builder /usr/local/include /usr/local/include

# Install runtime dependencies
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python3 python3-pip curl libboost-all-dev \
    git device-tree-compiler build-essential mold ccache cmake ninja-build \
    libgoogle-perftools-dev libglib2.0-dev libpixman-1-dev && \
    rm -rf /var/lib/apt/lists/* && \
    pip3 install nox --break-system-packages

# Set environment
ENV RISCV=/opt/riscv
ENV PATH=$RISCV/bin:$PATH
ENV VERILATOR_ROOT=/usr/local/share/verilator

RUN pip install nox --break-system-packages

# ---------- BASH COLORING --------
# Add color support to bash
RUN echo 'export PS1="\[\033[01;32m\]\u@riscv\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ "' >> /root/.bashrc
RUN echo 'export PS1="\[\033[01;32m\]\u@riscv\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ "' >> /etc/skel/.bashrc

# Enable color for ls and grep
RUN echo 'alias ls="ls --color=auto"' >> /root/.bashrc
RUN echo 'alias grep="grep --color=auto"' >> /root/.bashrc
RUN echo 'alias ls="ls --color=auto"' >> /etc/skel/.bashrc
RUN echo 'alias grep="grep --color=auto"' >> /etc/skel/.bashrc

RUN echo "bash -c 'echo -e \"\n\
🔧 Verilator version:  \$(verilator --version)\n\
🚀 Spike version:      \$(spike --help 2>&1 | head -n 1)\n\
🔨 RISC-V GCC:         \$(riscv-none-elf-gcc --version | head -n 1)\n\
🐍 Python:             \$(python3 --version)\"'" >> /root/.bashrc

CMD ["/bin/bash"]
