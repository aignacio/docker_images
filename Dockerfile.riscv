# ---- Build stage ----
# This stage builds all components (toolchain, spike, pk, verilator)

FROM ubuntu:latest AS builder

# Set arguments with default versions
ARG RISCV_TOOLCHAIN_BRANCH=2025.07.16
ARG VERILATOR_VERSION=stable
ARG SPIKE_VERSION=master

# Install dependencies
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    autoconf automake autotools-dev curl python3 python3-pip libmpc-dev libmpfr-dev libgmp-dev \
    gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev git \
    libexpat-dev libboost-all-dev libyaml-dev device-tree-compiler cmake ninja-build \
    libgoogle-perftools-dev libglib2.0-dev libpixman-1-dev pkg-config python3-setuptools \
    python3-pybind11 && \
    rm -rf /var/lib/apt/lists/*

# Environment
ENV RISCV=/opt/riscv

# Build RISC-V toolchain (multilib)
RUN git clone https://github.com/riscv/riscv-gnu-toolchain && \
    cd riscv-gnu-toolchain && \
    git checkout ${RISCV_TOOLCHAIN_BRANCH} && \
    ./configure --prefix=$RISCV --enable-multilib && \
    make -j$(nproc)

# Build spike
RUN git clone https://github.com/riscv-software-src/riscv-isa-sim.git && \
    cd riscv-isa-sim && \
    git checkout ${SPIKE_VERSION} && \
    mkdir build && cd build && \
    ../configure --prefix=$RISCV && make -j$(nproc) && make install

# # Build proxy kernel (pk)
# RUN git clone https://github.com/riscv-software-src/riscv-pk.git && \
#     cd riscv-pk && \
#     mkdir build && cd build && \
#     ../configure --prefix=$RISCV --host=riscv64-unknown-elf && \
#     make -j$(nproc) && make install

# Build Verilator
RUN apt-get update -y && apt-get install git help2man perl python3 make \
    g++ libfl-dev zlib1g zlib1g-dev ccache mold libgoogle-perftools-dev numactl -y
RUN git clone https://github.com/verilator/verilator && \
    cd verilator && \
    git checkout ${VERILATOR_VERSION} && \
    autoconf && ./configure && make -j$(nproc) && make install

# ---- Final image ----
FROM ubuntu:latest AS final

ARG VERILATOR_VERSION=stable

# Copy from build stage
COPY --from=builder /opt/riscv /opt/riscv
COPY --from=builder /usr/local/bin/verilator* /usr/local/bin/
COPY --from=builder /usr/local/share/verilator /usr/local/share/verilator
COPY --from=builder /usr/local/lib /usr/local/lib
COPY --from=builder /usr/local/include /usr/local/include

# Install runtime dependencies
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
    python3 python3-pip curl libboost-all-dev libgoogle-perftools-dev libglib2.0-dev libpixman-1-dev && \
    rm -rf /var/lib/apt/lists/* && \
    pip3 install nox --break-system-packages

# Set environment
ENV RISCV=/opt/riscv
ENV PATH=$RISCV/bin:$PATH
ENV VERILATOR_ROOT=/usr/local/share/verilator

# Show versions at startup
RUN echo "bash -c 'echo -e \"\n\
\033[1;36m🔧 Verilator version:\033[0m  \$(verilator --version)\n\
\033[1;36m🚀 Spike version:\033[0m      \$(spike --help 2>&1 | head -n 1)\n\
\033[1;36m🔨 RISC-V GCC:\033[0m         \$(riscv64-unknown-elf-gcc --version | head -n 1)\n\
\033[1;36m🐍 Python:\033[0m             \$(python3 --version)\"'" >> /root/.bashrc

# Configure terminal with custom prompt and welcome message
RUN echo 'export PS1="\[\033[1;36m\][aignacio_rtl]\[\033[0m\] \[\033[1;32m\]\w\[\033[0m\] \[\033[1;33m\]\$\[\033[0m\] "' >> /root/.bashrc \
    && echo 'export TERM=xterm-256color' >> /root/.bashrc \
    && echo 'echo -e "\n\033[1;36m=== Welcome to aignacio/riscv container ===\033[0m"' >> /root/.bashrc \
    && echo 'echo -e "\033[1;33mRISC-V Toolchain and RTL tools are ready!\033[0m"' >> /root/.bashrc

CMD ["/bin/bash"]
