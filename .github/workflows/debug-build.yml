name: Debug Build Issues

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug Repository Structure
        run: |
          echo "## Repository Structure Debug" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Current directory:**" >> $GITHUB_STEP_SUMMARY
          pwd >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "**All files in repository:**" >> $GITHUB_STEP_SUMMARY
          find . -type f -name "Dockerfile*" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "**Dockerfile contents check:**" >> $GITHUB_STEP_SUMMARY
          for dockerfile in Dockerfile.*; do
            if [ -f "$dockerfile" ]; then
              echo "**$dockerfile:**" >> $GITHUB_STEP_SUMMARY
              echo "Size: $(wc -c < "$dockerfile") bytes" >> $GITHUB_STEP_SUMMARY
              echo "Lines: $(wc -l < "$dockerfile")" >> $GITHUB_STEP_SUMMARY
              echo "First line: $(head -1 "$dockerfile")" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          done

      - name: Test Dockerfile Discovery
        run: |
          echo "## Dockerfile Discovery Test" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Test the exact command from the workflow
          dockerfiles=$(find . -name "Dockerfile.*" -type f | sed 's|./Dockerfile.||' | sort)
          echo "**Found Dockerfiles:**" >> $GITHUB_STEP_SUMMARY
          echo "$dockerfiles" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Test matrix generation
          matrix='['
          first=true
          for dockerfile in $dockerfiles; do
            if [ "$first" = true ]; then
              first=false
            else
              matrix="$matrix,"
            fi
            
            image_name=$(echo "$dockerfile" | sed 's/[^a-zA-Z0-9]//g')
            matrix="$matrix{\"dockerfile\":\"$dockerfile\",\"image_name\":\"$image_name\"}"
          done
          matrix="$matrix]"
          
          echo "**Generated Matrix:**" >> $GITHUB_STEP_SUMMARY
          echo "$matrix" >> $GITHUB_STEP_SUMMARY

      - name: Check GitHub Secrets
        run: |
          echo "## GitHub Secrets Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
            echo "✅ DOCKERHUB_USERNAME is set" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ DOCKERHUB_USERNAME is NOT set" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            echo "✅ DOCKERHUB_TOKEN is set" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ DOCKERHUB_TOKEN is NOT set" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Test Docker Build (Dry Run)
        run: |
          echo "## Docker Build Test" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          for dockerfile in Dockerfile.*; do
            if [ -f "$dockerfile" ]; then
              echo "**Testing $dockerfile:**" >> $GITHUB_STEP_SUMMARY
              
              # Test if Dockerfile is valid
              if docker build --dry-run -f "$dockerfile" . 2>&1; then
                echo "✅ $dockerfile is valid" >> $GITHUB_STEP_SUMMARY
              else
                echo "❌ $dockerfile has issues" >> $GITHUB_STEP_SUMMARY
              fi
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
          done 