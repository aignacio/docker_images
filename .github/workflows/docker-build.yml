name: "Build and Push Docker Images"

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force rebuild all images (ignore changes)'
        required: false
        default: false
        type: boolean

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_BUILDKIT: 1

jobs:
  discover-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      dockerfiles: ${{ steps.discover.outputs.dockerfiles }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: "Discover Dockerfiles"
        id: discover
        run: |
          dockerfiles=$(find . -name "Dockerfile*" -type f ! -name "Dockerfile.riscv" | jq -R -s -c 'split("\n")[:-1]')
          echo "dockerfiles=$dockerfiles" >> $GITHUB_OUTPUT
          echo "Found Dockerfiles: $dockerfiles"

  build-and-push:
    needs: discover-dockerfiles
    runs-on: ubuntu-latest
    #runs-on: [ubuntu-latest, self-hosted]
    strategy:
      fail-fast: false
      matrix:
        dockerfile: ${{ fromJson(needs.discover-dockerfiles.outputs.dockerfiles) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # Allow the CI environment to emulate multiple CPU architectures.
      - name: "Set up QEMU"
        uses: "docker/setup-qemu-action@v3"

      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@v3

      - name: "Login to Docker Hub"
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: "Check if Dockerfile has changed"
        id: check-changes
        run: |
          echo "Checking changes for: ${{ matrix.dockerfile }}"
          echo "Event type: ${{ github.event_name }}"
          echo "Current commit: $(git rev-parse HEAD)"

          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.force_rebuild }}" = "true" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "ðŸ”„ Force rebuild requested, will build"
            exit 0
          fi

          echo "changed=true" >> $GITHUB_OUTPUT  # Always rebuild for now

      - name: "Extract image name from Dockerfile path"
        id: image-name
        if: steps.check-changes.outputs.changed == 'true'
        run: |
          name=$(echo "${{ matrix.dockerfile }}" | sed 's|^\./||' | sed 's|Dockerfile\.||' | sed 's|\.|-|g')
          echo "name=$name" >> $GITHUB_OUTPUT
          echo "Image name: $name"

      # Push images for multiple platforms to the Docker Hub (more on this in a bit).
      - name: "Build and push image tags"
        uses: "docker/build-push-action@v5"
        with:
          context: "."
          file: ${{ matrix.dockerfile }}
          platforms: "linux/amd64,linux/arm64"
          push: true
          tags: |
            "${{ env.DOCKERHUB_USERNAME }}/${{ steps.image-name.outputs.name }}:latest"
            "${{ env.DOCKERHUB_USERNAME }}/${{ steps.image-name.outputs.name }}:${{ github.ref_name }}"
